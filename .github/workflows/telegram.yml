name: Daily Telegram post

on:
  schedule:
    # GitHub Actions по UTC; Москва 21:23 → 18:23 UTC
    - cron: "23 18 * * *"
  workflow_dispatch: {}

jobs:
  post_and_delete:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Check secrets
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
          POST_TEXT: ${{ secrets.POST_TEXT }}
          DELETE_AFTER_SECONDS: ${{ secrets.DELETE_AFTER_SECONDS }}
        run: |
          test -n "$BOT_TOKEN" || (echo "::error::BOT_TOKEN is empty" && exit 2)
          test -n "$CHANNEL_ID" || (echo "::error::CHANNEL_ID is empty" && exit 2)
          test -n "$POST_TEXT"  || (echo "::error::POST_TEXT is empty" && exit 2)
          if [ -z "$DELETE_AFTER_SECONDS" ]; then
            echo "DELETE_AFTER_SECONDS not set, default 60"
          fi
          echo "CHANNEL_ID=$CHANNEL_ID"  # ок печатать; токен печатать нельзя

      - name: Send message (silent)
        id: send
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
          POST_TEXT: ${{ secrets.POST_TEXT }}
        run: |
          JSON=$(jq -n \
            --arg chat_id  "$CHANNEL_ID" \
            --arg text     "$POST_TEXT" \
            --argjson disable_web_page_preview false \
            --argjson disable_notification true \
            '{chat_id:$chat_id, text:$text, disable_web_page_preview:$disable_web_page_preview, disable_notification:$disable_notification}')

          echo "Payload: $JSON"
          RESP=$(curl -sS --fail-with-body -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
            -H "Content-Type: application/json" -d "$JSON") || {
              echo "::error::curl failed"
              exit 3
            }
          echo "Response: $RESP"

          OK=$(echo "$RESP" | jq -r '.ok')
          MSG_ID=$(echo "$RESP" | jq -r '.result.message_id // empty')
          DESC=$(echo "$RESP" | jq -r '.description // empty')
          if [ "$OK" != "true" ] || [ -z "$MSG_ID" ]; then
            echo "::error::Telegram error: ${DESC:-unknown}"
            exit 4
          fi
          echo "message_id=$MSG_ID" >> "$GITHUB_OUTPUT"

      - name: Wait before delete
        env:
          DELETE_AFTER_SECONDS: ${{ secrets.DELETE_AFTER_SECONDS }}
        run: |
          SECS=${DELETE_AFTER_SECONDS:-60}
          echo "Sleeping ${SECS}s"
          sleep "$SECS"

      - name: Delete message
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
          MSG_ID: ${{ steps.send.outputs.message_id }}
        run: |
          echo "Deleting message_id=${MSG_ID}"
          RESP=$(curl -sS --fail-with-body -X POST "https://api.telegram.org/bot${BOT_TOKEN}/deleteMessage" \
            -H "Content-Type: application/json" \
            -d "{\"chat_id\":\"${CHANNEL_ID}\",\"message_id\":${MSG_ID}}")
          echo "Delete response: $RESP"
